version: '2'
networks:
  app-tier:
    driver: bridge
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-tier
  kafka:
    container_name: kafka
    ports:
      - "9092:9092"
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'INTERNAL://:29092,OUTSIDE://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092, OUTSIDE://192.168.1.241:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT, OUTSIDE:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CREATE_TOPICS: "wiki-data:1:1,event-notification:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-tier  
  cassandra:
    container_name: cassandra
    image: bitnami/cassandra:latest
    ports:
      - '7000:7000'
      - '9042:9042'
    volumes:
      - 'cassandra_data:/bitnami'
    environment:
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_PASSWORD=cassandra
    networks:
      - app-tier
  wiki-coordinator:
    container_name: wiki-coordinator
    image: pratik1788/wiki-coordinator:latest
    depends_on:
      - kafka
    ports:
      - '8080:8080'
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    networks:
      - app-tier
  wiki-reader:
    container_name: wiki-reader
    image: pratik1788/wiki-reader:latest
    depends_on:
      - kafka
    ports:
      - '8081:8081'
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "application.data.read-limit=-1"
    networks:
      - app-tier
  wiki-sink:
    container_name: wiki-sink
    image: pratik1788/wiki-sink:latest
    depends_on:
      - kafka
    ports:
      - '8082:8082'
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    networks:
      - app-tier
volumes:
  cassandra_data:
    driver: local
